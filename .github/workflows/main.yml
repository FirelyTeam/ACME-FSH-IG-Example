# This is a basic workflow to help you get started with Actions

name: Firely Validation

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Validate all resources using Firely Terminal 
  CI_FHIR_VALIDATION:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Install .NET runtime
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1.x
      
      # Install Java runtime (only needed if you want to run the offical HL7 Java validator)
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8
        
      - name: Firely.Terminal (GitHub Actions)
        uses: FirelyTeam/firely-terminal-pipeline@v0.3.2-alpha6
        with:
          PATH_TO_CONFORMANCE_RESOURCES: fsh-generated/resources
          # PATH_TO_EXAMPLES: Examples
          DOTNET_VALIDATION_ENABLED: true
          JAVA_VALIDATION_ENABLED: true
          PATH_TO_QUALITY_CONTROL_RULES: acme
          SIMPLIFIER_USERNAME: ${{ secrets.SIMPLIFIER_USERNAME }}
          SIMPLIFIER_PASSWORD: ${{ secrets.SIMPLIFIER_PASSWORD }}
          SUSHI_ENABLED: true
  
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Update the image to the latest publisher
        uses: docker://hl7fhir/ig-publisher-base:latest
        with:
          # Get the latest publisher - don't run the batch script but run the line directly
          args: curl -L https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar -o ./input-cache/publisher.jar --create-dirs

      - name: Run the IG publisher
        uses: docker://hl7fhir/ig-publisher-base:latest
        with:
          # Run the publisher - don't run the batch script but run the line directly
          args: java -jar ./input-cache/publisher.jar publisher -ig .

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output

#      - name: Sync files
#        uses: SamKirkland/FTP-Deploy-Action@4.0.0
#        with:
#          server: ftp.dlptest.com
#          username: dlpuser
#          password: ${{ secrets.ftp_password }}          
#          local-dir: output/
#          server-dir: fhir/ig_name/
